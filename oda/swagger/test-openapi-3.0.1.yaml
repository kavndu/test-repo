openapi: 3.0.1
info:
  title: ProductCatalogManagement
  description: "## TMF API Reference: TMF620 - Product Catalog Management\n\n### Release\
    \ : 19.0 - June 2019\n\nProduct Catalog API is one of Catalog Management API Family.\
    \ Product Catalog API goal is to provide a catalog of products. \n\n### Operations\n\
    Product Catalog API performs the following operations on the resources :\n- Retrieve\
    \ an entity or a collection of entities depending on filter criteria\n- Partial\
    \ update of an entity (including updating rules)\n- Create an entity (including\
    \ default values and creation rules)\n- Delete an entity\n- Manage notification\
    \ of events"
  version: 4.0.0
servers:
- url: https://serverRoot/tmf-api/productCatalogManagement/v4/
tags:
- name: catalog
- name: category
- name: productOffering
- name: productOfferingPrice
- name: productSpecification
- name: importJob
- name: exportJob
- name: notification listeners (client side)
- name: events subscription
paths:
  /catalog:
    get:
      tags:
      - catalog
      summary: List or find Catalog objects
      description: This operation list or find Catalog entities
      operationId: listCatalog
      parameters:
      - name: fields
        in: query
        description: Comma-separated properties to be provided in response
        schema:
          type: string
      - name: offset
        in: query
        description: Requested index for start of resources to be provided in response
        schema:
          type: integer
      - name: limit
        in: query
        description: Requested number of resources to be provided in response
        schema:
          type: integer
      responses:
        "200":
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
      security:
        - default:
            - srescope
            - srescopeone
components:
  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://test.com
          scopes:
            srescopetwo: srescopetwo description
            srescope: srescope
            srescopeone: srescopeone description
          x-scopes-bindings:
            srescope: admin
            srescopetwo: admin
            srescopeone: admin
  schemas:
    AgreementRef:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the agreement
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: "Agreement reference. An agreement represents a contract or arrangement,\
        \ either written or verbal and sometimes enforceable by law, such as a service\
        \ level agreement or a customer price agreement. An agreement involves a number\
        \ of other business entities, such as products, services, and resources and/or\
        \ their specifications."
    Any:
      type: object
    Attachment:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
        href:
          type: string
          description: URI for this Attachment
        attachmentType:
          type: string
          description: "Attachment type such as video, picture"
        content:
          type: string
          description: "The actual contents of the attachment object, if embedded,\
            \ encoded as base64"
        description:
          type: string
          description: A narrative text describing the content of the attachment
        mimeType:
          type: string
          description: "Attachment mime type such as extension file for video, picture\
            \ and document"
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: "Uniform Resource Locator, is a web page address (a subset\
            \ of URI)"
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: "When sub-classing, this defines the super-class"
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
        '@type':
          type: string
          description: "When sub-classing, this defines the sub-class entity name"
      description: "Complements the description of an element (for instance a product)\
        \ through video, pictures..."
x-original-swagger-version: "2.0"
